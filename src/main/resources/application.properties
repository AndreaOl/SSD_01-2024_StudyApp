server.port=${PORT:8088}
logging.level.org.atmosphere = warn
spring.mustache.check-template-location = false

# Configure a timeout
server.servlet.session.timeout=10m

vaadin.heartbeatInterval=50
# Don't let the heartbeat keep the sessions alive indefinitely
vaadin.closeIdleSessions=true

# First, we need to tell the application where to find our Keycloak instance (in a real application, Keycloak would also be using HTTPS)
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://studyappkeycloak.ddns.net/realms/studyapp
# Second, we need to tell the application what info to pass to the Keycloak instance
spring.security.oauth2.client.registration.keycloak.client-id=studyapp-client
spring.security.oauth2.client.registration.keycloak.client-secret=Nd5PZWRClL81zWztTpopq19K71o0H3p6
spring.security.oauth2.client.registration.keycloak.scope=profile,email,openid,roles

studyapp.base-url=https://ssdstudyapp.northeurope.cloudapp.azure.com/

keycloak-rest.server-url=http://studyappkeycloak.ddns.net/
keycloak-rest.realm=studyapp
keycloak-rest.client-id=admin-cli
keycloak-rest.client-secret=mM5lyzV478xpUGHXxTkILG6B33duFguM
 
# Launch the default browser when starting the application in development mode
vaadin.launch-browser=true
# To improve the performance during development.
# For more information https://vaadin.com/docs/flow/spring/tutorial-spring-configuration.html#special-configuration-parameters
vaadin.whitelisted-packages = com.vaadin,org.vaadin,dev.hilla,com.flowingcode,it.studyapp.application
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url = jdbc:postgresql://postgres:5432/postgres
spring.datasource.username = postgres
spring.datasource.password = SA_Az3FNs!
spring.jpa.generate-ddl = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.defer-datasource-initialization = true
